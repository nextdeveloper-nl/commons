<?php

namespace NextDeveloper\Commons\Services;

use NextDeveloper\Commons\Database\Models\ViewTags;
use NextDeveloper\Commons\Exceptions\ModelNotFoundException;
use NextDeveloper\Commons\Helpers\TagHelper;
use NextDeveloper\Commons\Services\AbstractServices\AbstractTagsService;
use NextDeveloper\IAM\Helpers\UserHelper;

/**
* This class is responsible from managing the data for Tags
*
* Class TagsService.
*
* @package NextDeveloper\Commons\Database\Models
*/
class TagsService extends AbstractTagsService {

    // EDIT AFTER HERE - WARNING: ABOVE THIS LINE MAY BE REGENERATED AND YOU MAY LOSE CODE

    public static function create(array $data)
    {
        if(array_key_exists('iam_account_id', $data)) {
            $data['iam_account_id'] = UserHelper::currentAccount()->id;
        } else {
            if(UserHelper::me() != null) {
                $data['iam_account_id'] = UserHelper::currentAccount()->id;
            }
        }

        return parent::create($data); // TODO: Change the autogenerated stub
    }

    public static function getTags($objectType, $objectId) {
        $object = TagHelper::getObject($objectType);

        if(!$object)
            throw new ModelNotFoundException('Cannot find the object type you are looking for. If you think this is'
                . ' wrong, please look at your configuration and give me the correct model name.');

        $tags = ViewTags::where('object_type', $object)
            ->where('object_id', $objectId)
            ->get();

        return $tags;
    }
}
